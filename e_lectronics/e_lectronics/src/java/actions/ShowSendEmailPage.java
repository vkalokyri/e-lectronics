/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package actions;

import controller.Action;
import daoFactories.DAOFactory;
import daoInterfaces.CustomerDAO;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.MessagingException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import model.CustomerInfoBean;
import sendMail.SendMailUsingAuthentication;

/**
 *
 * @author Valitsa
 */
public class ShowSendEmailPage implements Action {

    private String view;
    private CustomerInfoBean cust;

    public boolean execute(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {

        HttpSession session=req.getSession();

        String email;
        String subject;
        String body;
        String [] recipient=new String[1];
        
        if (req.getParameter("fr").equals("1")){
            email=req.getParameter("email");

            DAOFactory mysqlFactory=(DAOFactory)session.getAttribute("daoFactory");

            if(mysqlFactory==null){
              mysqlFactory=DAOFactory.getDAOFactory(DAOFactory.mySQL);
              session.setAttribute("daoFactory", mysqlFactory);
            }
            // Create a DAO
            CustomerDAO custDAO = mysqlFactory.getCustomerDAO();
            try {
                cust = custDAO.retrievePassword(email);
            } catch (SQLException ex) {
                Logger.getLogger(ShowSendEmailPage.class.getName()).log(Level.SEVERE, null, ex);
            }

            if(!cust.isValid()){
                
                view="./views/ShowForgetPasswordView.jsp";
                return true;
            }

            String username_rec = cust.getUsername();
            String password_rec = cust.getPassword();

            subject="E-lectronics Account Recovery";
            recipient[0]=email;

            StringBuffer sb = new StringBuffer();

            /*
            try{
                sb.append("E-lectronics: Υπηρεσία ανάκτησης στοιχείων σύνδεσης\n");
                sb.append("--------------------------------------------------\n");
                sb.append("\nΤο μήνυμα αυτό δημιουργήθηκε αυτόματα κατόπιν\n");
                sb.append("αίτησης μέσω του δικτυακού ιστοτόπου της E-lectronics\n\n");
                sb.append("Αν δεν ζητήσατε εσείς την ανάκτηση των στοιχείων σύνδεσης,\n");
                sb.append("τότε ενδεχομένως κάποιος κακόβουλος χρήστης να το ζήτησε\n");
                sb.append("για εσάς. Σε αυτήν την περίπτωση, αγνοείστε το παρόν e-mail.\n");
                sb.append("--------------------------------------------------\n");
                sb.append("Τα στοιχεία σύνδεσης σας είναι:\n");
                sb.append("* Όνομα χρήστη     : "+username_rec+"\n");
                sb.append("* Κωδικός πρόσβασης: "+password_rec+"\n");
                sb.append("--------------------------------------------------\n");
            }catch(Exception e){

            }
            */

            try{
                sb.append("E-lectronics: Account Recovery Service\n");
                sb.append("--------------------------------------------------\n");
                sb.append("\nThis is an autogenerated e-mail, created as a reply\n");
                sb.append("to a request sent to E-lectronics through our webpage.\n\n");
                sb.append("If you did not ask for the recovery of your account credentials,\n");
                sb.append("then probably a malicious user did it on your behalf.\n");
                sb.append("In that case, please ignore this e-mail.\n");
                sb.append("--------------------------------------------------\n");
                sb.append("Your account credentials:\n");
                sb.append("* Username : "+username_rec+"\n");
                sb.append("* Password : "+password_rec+"\n");
                sb.append("--------------------------------------------------\n");
            }catch(Exception e){

            }
            
            SendMailUsingAuthentication smtpMailSender = new SendMailUsingAuthentication();
            try {
                smtpMailSender.postMail(recipient, subject, sb.toString());
            } catch (MessagingException ex) {
                Logger.getLogger(ShowSendEmailPage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            email=req.getParameter("email");
            subject=req.getParameter("subject");
            body=req.getParameter("body");
            recipient[0]="e_lectronics_shop@yahoo.com";

            StringBuffer sb = new StringBuffer();

            try{
                sb.append("E_electronics Contact Form\n");
                sb.append("--------------------------\n");
                sb.append("Subject: "+subject+"\n");
                sb.append("Body:\n"+body);
                sb.append("\nReply to: "+email);
                sb.append("\n--------------------------\n");
            }catch(Exception e){

            }
            SendMailUsingAuthentication smtpMailSender = new SendMailUsingAuthentication();
            try {
                smtpMailSender.postMail(recipient, subject, sb.toString());
            } catch (MessagingException ex) {
                Logger.getLogger(ShowSendEmailPage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }     

        view="./views/ShowSendEmailView.jsp";

        return true;
    }

    public String getView() {
        return view;
    }

    public Object getModel() {
        return cust;
    }

}
